name: Dev-CD-CD

on:
  push:
    branches:
      - main
      - stage
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest

      - name: Configure AWS credentials for dev branch
        if: github.ref == 'refs/heads/dev'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: us-west-2  # Change to your desired region
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan
  
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

  setup-EC-2-with-docker-images-app:
    runs-on: ubuntu-latest
    steps:
              - uses: actions/checkout@v3
              - name: Set up Python 3.9.16
                uses: actions/setup-python@v3
                with:
                  python-version: "3.9.16"
              - name: Install nginx and pull images
                run: |
                  ssh -i "ssh_key_aws" -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -tt ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
                    #run commands
                    sudo apt-get update
                    sudo apt-get install -y nginx
                    sudo systemctl start nginx
                    sudo systemctl enable nginx
                    echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
                    docker pull thang14112005/music-app:latest
                    docker run -d -p 8051:80 thang14112005/music-app:latest
    
    